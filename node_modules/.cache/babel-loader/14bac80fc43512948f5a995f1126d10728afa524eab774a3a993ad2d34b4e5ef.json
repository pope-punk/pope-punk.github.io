{"ast":null,"code":"var _jsxFileName = \"C:\\\\ApplicationDev\\\\pope-punk.github.io\\\\src\\\\components\\\\MatrixInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { isValidMatrix } from '../utils/matrixUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatrixInput = ({\n  initialMatrix,\n  onSubmit,\n  customImages\n}) => {\n  _s();\n  const [matrix, setMatrix] = useState([[0, 0, 0], [0, 0, 0], [0, 0, 0]]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (initialMatrix && Array.isArray(initialMatrix) && initialMatrix.length === 3) {\n      setMatrix(initialMatrix);\n    }\n  }, [initialMatrix]);\n  const handleCellToggle = (ringIndex, diagIndex) => {\n    const newMatrix = JSON.parse(JSON.stringify(matrix));\n    newMatrix[ringIndex][diagIndex] = newMatrix[ringIndex][diagIndex] === 0 ? 2 : 0;\n    setMatrix(newMatrix);\n    setError(''); // Clear any previous error\n\n    // Auto-check validity on each toggle\n    if (isValidMatrix(newMatrix)) {\n      onSubmit(newMatrix);\n    }\n  };\n\n  // Get total pews placed\n  const totalPairs = matrix.flat().reduce((sum, val) => sum + (val === 2 ? 1 : 0), 0);\n  const innerRingPairs = matrix[0].reduce((sum, val) => sum + (val === 2 ? 1 : 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matrix-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix-grid\",\n      children: matrix.map((row, ringIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: row.map((cell, diagIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `matrix-cell ${cell === 2 ? 'pressed' : ''}`,\n          onClick: () => handleCellToggle(ringIndex, diagIndex),\n          type: \"button\",\n          \"aria-label\": `Toggle pew at ring ${ringIndex + 1}, diagonal ${diagIndex + 1}`,\n          \"aria-pressed\": cell === 2\n        }, `cell-${ringIndex}-${diagIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, `ring-${ringIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix-status\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isValidMatrix(matrix) ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"valid-config\",\n          children: \"Valid Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-config\",\n          children: totalPairs === 3 && innerRingPairs <= 1 ? \"Arrangement doesn't match church geometry\" : `Need ${3 - totalPairs} more pair${3 - totalPairs !== 1 ? 's' : ''} ${innerRingPairs > 1 ? '(max 1 on inner ring)' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(MatrixInput, \"RV1/05rog0HS2AhopcblDPJSNB0=\");\n_c = MatrixInput;\nexport default MatrixInput;\nvar _c;\n$RefreshReg$(_c, \"MatrixInput\");","map":{"version":3,"names":["React","useState","useEffect","isValidMatrix","jsxDEV","_jsxDEV","MatrixInput","initialMatrix","onSubmit","customImages","_s","matrix","setMatrix","error","setError","Array","isArray","length","handleCellToggle","ringIndex","diagIndex","newMatrix","JSON","parse","stringify","totalPairs","flat","reduce","sum","val","innerRingPairs","className","children","map","row","Fragment","cell","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ApplicationDev/pope-punk.github.io/src/components/MatrixInput.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { isValidMatrix } from '../utils/matrixUtils';\r\n\r\nconst MatrixInput = ({ initialMatrix, onSubmit, customImages }) => {\r\n  const [matrix, setMatrix] = useState([\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n    [0, 0, 0]\r\n  ]);\r\n  const [error, setError] = useState('');\r\n  \r\n  useEffect(() => {\r\n    if (initialMatrix && Array.isArray(initialMatrix) && initialMatrix.length === 3) {\r\n      setMatrix(initialMatrix);\r\n    }\r\n  }, [initialMatrix]);\r\n  \r\n  const handleCellToggle = (ringIndex, diagIndex) => {\r\n    const newMatrix = JSON.parse(JSON.stringify(matrix));\r\n    newMatrix[ringIndex][diagIndex] = newMatrix[ringIndex][diagIndex] === 0 ? 2 : 0;\r\n    setMatrix(newMatrix);\r\n    setError(''); // Clear any previous error\r\n    \r\n    // Auto-check validity on each toggle\r\n    if (isValidMatrix(newMatrix)) {\r\n      onSubmit(newMatrix);\r\n    }\r\n  };\r\n  \r\n  // Get total pews placed\r\n  const totalPairs = matrix.flat().reduce((sum, val) => sum + (val === 2 ? 1 : 0), 0);\r\n  const innerRingPairs = matrix[0].reduce((sum, val) => sum + (val === 2 ? 1 : 0), 0);\r\n  \r\n  return (\r\n    <div className=\"matrix-input\">\r\n      <div className=\"matrix-grid\">\r\n        {matrix.map((row, ringIndex) => (\r\n          <React.Fragment key={`ring-${ringIndex}`}>\r\n            {row.map((cell, diagIndex) => (\r\n              <button\r\n                key={`cell-${ringIndex}-${diagIndex}`}\r\n                className={`matrix-cell ${cell === 2 ? 'pressed' : ''}`}\r\n                onClick={() => handleCellToggle(ringIndex, diagIndex)}\r\n                type=\"button\"\r\n                aria-label={`Toggle pew at ring ${ringIndex + 1}, diagonal ${diagIndex + 1}`}\r\n                aria-pressed={cell === 2}\r\n              />\r\n            ))}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"matrix-status\">\r\n        <div>\r\n          {isValidMatrix(matrix) ? \r\n            <span className=\"valid-config\">Valid Configuration</span> : \r\n            <span className=\"invalid-config\">{totalPairs === 3 && innerRingPairs <= 1 ? \r\n              \"Arrangement doesn't match church geometry\" : \r\n              `Need ${3-totalPairs} more pair${3-totalPairs !== 1 ? 's' : ''} ${innerRingPairs > 1 ? '(max 1 on inner ring)' : ''}`}\r\n            </span>\r\n          }\r\n        </div>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatrixInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}