{"ast":null,"code":"import React,{useEffect,useState,forwardRef,useCallback,useRef}from'react';// We'll import custom assets defined in the app\nimport defaultPewImage from'../assets/pew-icon.png';import defaultChurchBackground from'../assets/church-background.png';// --- Constants for Drawing ---\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HEXAGON_LINE_COLOR='#444';const HEXAGON_LINE_WIDTH=3;const GUIDE_LINE_COLOR='#888';const GUIDE_LINE_WIDTH=1;// Pew Size\nconst PEW_DISPLAY_WIDTH=100;const PEW_DISPLAY_HEIGHT=100;// Animation timing\nconst ANIMATION_DURATION=2500;// ms\n// --- Helper Functions ---\n// Draws the main hexagon outline\nconst drawHexagonalOutline=(ctx,width,height,hexSize,centerX,centerY)=>{const hexPoints=[];ctx.beginPath();for(let i=0;i<6;i++){const angle=Math.PI/3*i;const x=centerX+hexSize*Math.cos(angle);const y=centerY+hexSize*Math.sin(angle);hexPoints.push({x,y});if(i===0)ctx.moveTo(x,y);else ctx.lineTo(x,y);}ctx.closePath();ctx.strokeStyle=HEXAGON_LINE_COLOR;ctx.lineWidth=HEXAGON_LINE_WIDTH;ctx.stroke();return hexPoints;};// Draws the background (clipped)\nconst drawBackground=(ctx,width,height,backgroundImage,hexPoints)=>{ctx.save();ctx.beginPath();hexPoints.forEach((point,i)=>{if(i===0)ctx.moveTo(point.x,point.y);else ctx.lineTo(point.x,point.y);});ctx.closePath();ctx.clip();if(backgroundImage&&backgroundImage.complete&&backgroundImage.naturalHeight!==0){try{const imgRatio=backgroundImage.naturalWidth/backgroundImage.naturalHeight;const canvasRatio=width/height;let drawWidth,drawHeight,drawX,drawY;if(imgRatio>canvasRatio){drawHeight=height;drawWidth=imgRatio*drawHeight;drawX=(width-drawWidth)/2;drawY=0;}else{drawWidth=width;drawHeight=drawWidth/imgRatio;drawX=0;drawY=(height-drawHeight)/2;}ctx.drawImage(backgroundImage,drawX,drawY,drawWidth,drawHeight);}catch(e){ctx.fillStyle='#BCBCBC';ctx.fillRect(0,0,width,height);}}else{ctx.fillStyle='#BCBCBC';ctx.fillRect(0,0,width,height);}ctx.restore();};// Draws the concentric rings and diagonal guides\nconst drawGuides=(ctx,width,height,hexSize,centerX,centerY)=>{const ringRadii=[hexSize*0.3,hexSize*0.6,hexSize*0.85];ctx.strokeStyle=GUIDE_LINE_COLOR;ctx.lineWidth=GUIDE_LINE_WIDTH;// Rings\nringRadii.forEach(radius=>{ctx.beginPath();ctx.arc(centerX,centerY,radius,0,Math.PI*2);ctx.stroke();});// Diagonals - use standard angles: 0, 60, 120 degrees\nconst diagonalAngles=[0,Math.PI/3,2*Math.PI/3];diagonalAngles.forEach(angle=>{const startX=centerX+hexSize*Math.cos(angle);const startY=centerY+hexSize*Math.sin(angle);const endX=centerX-hexSize*Math.cos(angle);const endY=centerY-hexSize*Math.sin(angle);ctx.beginPath();ctx.moveTo(startX,startY);ctx.lineTo(endX,endY);ctx.stroke();});// Center point\nctx.beginPath();ctx.arc(centerX,centerY,3,0,Math.PI*2);ctx.fillStyle=GUIDE_LINE_COLOR;ctx.fill();return ringRadii;// Return adjusted radii\n};// Fallback shape if image fails\nconst drawFallbackPew=ctx=>{ctx.beginPath();ctx.arc(0,0,3,0,Math.PI*2);ctx.fillStyle='red';ctx.fill();};// Draw pews based on matrix\nconst drawPews=(ctx,matrix,pewImgObject,width,height,hexSize,centerX,centerY,ringRadii)=>{if(!matrix)return;const imageToDraw=pewImgObject&&pewImgObject.complete&&pewImgObject.naturalHeight!==0?pewImgObject:null;// Define the base angles for diagonals\nconst diagonalBaseAngles=[0,Math.PI/3,2*Math.PI/3];// Convert matrix to pew placement\nconst pewPositions=[];for(let r=0;r<3;r++){for(let d=0;d<3;d++){if(matrix[r][d]===2){// Add symmetric pair\npewPositions.push([r,d,0]);pewPositions.push([r,d,1]);}}}pewPositions.forEach(pew=>{const[ringIndex,diagonalIndex,side]=pew;// 1. Get Base Angle for the diagonal\nconst baseAngle=diagonalBaseAngles[diagonalIndex];// 2. Determine Specific Pew Angle based on 'side'\nconst pewAngle=baseAngle+(side===0?0:Math.PI);// 3. Get Radius for the ring\nconst radius=ringRadii[ringIndex];// 4. Calculate Coordinates\nconst x=centerX+radius*Math.cos(pewAngle);const y=centerY+radius*Math.sin(pewAngle);// 5. Translate origin to the pew's location\nctx.save();ctx.translate(x,y);// 6. Calculate Orientation Angle (perpendicular to the diagonal)\nconst orientationAngle=pewAngle+Math.PI/2;// 7. Rotate context\nctx.rotate(orientationAngle);// 8. Draw Image (or fallback)\nif(imageToDraw){try{const imgAspect=imageToDraw.naturalWidth/imageToDraw.naturalHeight;let dWidth=PEW_DISPLAY_WIDTH;let dHeight=dWidth/imgAspect;if(dHeight>PEW_DISPLAY_HEIGHT){dHeight=PEW_DISPLAY_HEIGHT;dWidth=dHeight*imgAspect;}// Align top/narrow edge midpoint with origin\nconst dx=-dWidth/2;const dy=0;ctx.drawImage(imageToDraw,dx,dy,dWidth,dHeight);}catch(e){drawFallbackPew(ctx);}}else{drawFallbackPew(ctx);}// 9. Restore context\nctx.restore();});};// Interpolate between matrices for smooth animation\nconst interpolateMatrix=(startMatrix,endMatrix,progress)=>{// Create an interpolated matrix where 0 = not present, 1 = fading in/out, 2 = fully present\nconst result=[[0,0,0],[0,0,0],[0,0,0]];for(let r=0;r<3;r++){for(let d=0;d<3;d++){// If both have pews, keep it at 2\nif(startMatrix[r][d]===2&&endMatrix[r][d]===2){result[r][d]=2;}// If start has pew but end doesn't, fade out\nelse if(startMatrix[r][d]===2&&endMatrix[r][d]===0){result[r][d]=progress<0.5?2:0;}// If end has pew but start doesn't, fade in\nelse if(startMatrix[r][d]===0&&endMatrix[r][d]===2){result[r][d]=progress>0.5?2:0;}}}return result;};// --- Main Component ---\nconst HexagonalChurch=/*#__PURE__*/forwardRef((_ref,ref)=>{var _animationSteps$curre;let{matrix,animationSteps,customImages}=_ref;// State\nconst[bgImg,setBgImg]=useState(null);const[pewImg,setPewImg]=useState(null);const[currentStepIndex,setCurrentStepIndex]=useState(0);const[animationProgress,setAnimationProgress]=useState(1);// 0 to 1\nconst[animationActive,setAnimationActive]=useState(false);const[interpolatedMatrix,setInterpolatedMatrix]=useState(matrix);const animationRef=useRef(null);// Image Loading\nuseEffect(()=>{const img=new Image();img.onload=()=>{setBgImg(img);};img.onerror=e=>{console.error(\"BG Image Load Error:\",e);setBgImg(null);};img.src=(customImages===null||customImages===void 0?void 0:customImages.hexagonBackground)||defaultChurchBackground;return()=>{img.onload=null;img.onerror=null;};},[customImages===null||customImages===void 0?void 0:customImages.hexagonBackground]);useEffect(()=>{const img=new Image();img.onload=()=>{setPewImg(img);};img.onerror=e=>{console.error(\"Pew Image Load Error:\",e);setPewImg(null);};img.src=(customImages===null||customImages===void 0?void 0:customImages.buttonIcon)||defaultPewImage;return()=>{img.onload=null;img.onerror=null;};},[customImages===null||customImages===void 0?void 0:customImages.buttonIcon]);// Animation processing\nuseEffect(()=>{// If we have new animation steps, start animation\nif(animationSteps&&animationSteps.length>1){setCurrentStepIndex(0);setAnimationProgress(0);setAnimationActive(true);}},[animationSteps]);// Animation frame handler\nuseEffect(()=>{if(!animationActive||!animationSteps||animationSteps.length<=1)return;let startTime;const step=timestamp=>{if(!startTime)startTime=timestamp;const elapsed=timestamp-startTime;const progress=Math.min(elapsed/ANIMATION_DURATION,1);setAnimationProgress(progress);if(progress<1){animationRef.current=requestAnimationFrame(step);}else{// Move to next step or finish animation\nif(currentStepIndex<animationSteps.length-1){setCurrentStepIndex(prev=>prev+1);setAnimationProgress(0);startTime=null;animationRef.current=requestAnimationFrame(step);}else{setAnimationActive(false);}}};animationRef.current=requestAnimationFrame(step);return()=>{if(animationRef.current){cancelAnimationFrame(animationRef.current);}};},[animationActive,currentStepIndex,animationSteps]);// Update interpolated matrix during animation\nuseEffect(()=>{if(!animationActive||!animationSteps||animationSteps.length<=1){setInterpolatedMatrix(matrix);return;}const currentStep=animationSteps[currentStepIndex];const nextStep=animationSteps[Math.min(currentStepIndex+1,animationSteps.length-1)];if(currentStep&&nextStep){setInterpolatedMatrix(interpolateMatrix(currentStep.matrix,nextStep.matrix,animationProgress));}},[animationActive,currentStepIndex,animationProgress,animationSteps,matrix]);// Drawing function\nconst drawCanvas=useCallback(()=>{const canvas=ref===null||ref===void 0?void 0:ref.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;const{width,height}=canvas;const centerX=width/2;const centerY=height/2;const hexSize=Math.min(width,height)*0.45;// Clear with transparent background instead of black\nctx.clearRect(0,0,width,height);// Draw everything\nconst hexPoints=drawHexagonalOutline(ctx,width,height,hexSize,centerX,centerY);drawBackground(ctx,width,height,bgImg,hexPoints);drawHexagonalOutline(ctx,width,height,hexSize,centerX,centerY);// Outline on top\nconst ringRadii=drawGuides(ctx,width,height,hexSize,centerX,centerY);// Draw pews with current matrix or animation interpolation\nconst matrixToRender=animationActive?interpolatedMatrix:matrix;drawPews(ctx,matrixToRender,pewImg,width,height,hexSize,centerX,centerY,ringRadii);},[ref,matrix,bgImg,pewImg,animationActive,interpolatedMatrix]);// Effect to trigger drawing\nuseEffect(()=>{drawCanvas();},[drawCanvas]);// Render\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"church-visualization\",children:[/*#__PURE__*/_jsx(\"canvas\",{ref:ref,width:600,height:600,className:\"church-canvas\",\"aria-label\":\"Hexagonal church layout\",role:\"img\"}),animationActive&&/*#__PURE__*/_jsx(\"div\",{className:\"animation-status\",children:/*#__PURE__*/_jsx(\"div\",{className:\"step-description\",children:((_animationSteps$curre=animationSteps[currentStepIndex])===null||_animationSteps$curre===void 0?void 0:_animationSteps$curre.description)||\"Transformation in progress...\"})})]});});HexagonalChurch.displayName='HexagonalChurch';export default HexagonalChurch;","map":{"version":3,"names":["React","useEffect","useState","forwardRef","useCallback","useRef","defaultPewImage","defaultChurchBackground","jsx","_jsx","jsxs","_jsxs","HEXAGON_LINE_COLOR","HEXAGON_LINE_WIDTH","GUIDE_LINE_COLOR","GUIDE_LINE_WIDTH","PEW_DISPLAY_WIDTH","PEW_DISPLAY_HEIGHT","ANIMATION_DURATION","drawHexagonalOutline","ctx","width","height","hexSize","centerX","centerY","hexPoints","beginPath","i","angle","Math","PI","x","cos","y","sin","push","moveTo","lineTo","closePath","strokeStyle","lineWidth","stroke","drawBackground","backgroundImage","save","forEach","point","clip","complete","naturalHeight","imgRatio","naturalWidth","canvasRatio","drawWidth","drawHeight","drawX","drawY","drawImage","e","fillStyle","fillRect","restore","drawGuides","ringRadii","radius","arc","diagonalAngles","startX","startY","endX","endY","fill","drawFallbackPew","drawPews","matrix","pewImgObject","imageToDraw","diagonalBaseAngles","pewPositions","r","d","pew","ringIndex","diagonalIndex","side","baseAngle","pewAngle","translate","orientationAngle","rotate","imgAspect","dWidth","dHeight","dx","dy","interpolateMatrix","startMatrix","endMatrix","progress","result","HexagonalChurch","_ref","ref","_animationSteps$curre","animationSteps","customImages","bgImg","setBgImg","pewImg","setPewImg","currentStepIndex","setCurrentStepIndex","animationProgress","setAnimationProgress","animationActive","setAnimationActive","interpolatedMatrix","setInterpolatedMatrix","animationRef","img","Image","onload","onerror","console","error","src","hexagonBackground","buttonIcon","length","startTime","step","timestamp","elapsed","min","current","requestAnimationFrame","prev","cancelAnimationFrame","currentStep","nextStep","drawCanvas","canvas","getContext","clearRect","matrixToRender","className","children","role","description","displayName"],"sources":["C:/ApplicationDev/pope-punk.github.io/src/components/HexagonalChurch.jsx"],"sourcesContent":["import React, { useEffect, useState, forwardRef, useCallback, useRef} from 'react';\r\n// We'll import custom assets defined in the app\r\nimport defaultPewImage from '../assets/pew-icon.png';\r\nimport defaultChurchBackground from '../assets/church-background.png';\r\n\r\n// --- Constants for Drawing ---\r\nconst HEXAGON_LINE_COLOR = '#444';\r\nconst HEXAGON_LINE_WIDTH = 3;\r\nconst GUIDE_LINE_COLOR = '#888';\r\nconst GUIDE_LINE_WIDTH = 1;\r\n// Pew Size\r\nconst PEW_DISPLAY_WIDTH = 100;\r\nconst PEW_DISPLAY_HEIGHT = 100;\r\n// Animation timing\r\nconst ANIMATION_DURATION = 2500; // ms\r\n\r\n// --- Helper Functions ---\r\n\r\n// Draws the main hexagon outline\r\nconst drawHexagonalOutline = (ctx, width, height, hexSize, centerX, centerY) => {\r\n    const hexPoints = [];\r\n    ctx.beginPath();\r\n    for (let i = 0; i < 6; i++) {\r\n        const angle = (Math.PI / 3) * i;\r\n        const x = centerX + hexSize * Math.cos(angle);\r\n        const y = centerY + hexSize * Math.sin(angle);\r\n        hexPoints.push({ x, y });\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n    }\r\n    ctx.closePath();\r\n    ctx.strokeStyle = HEXAGON_LINE_COLOR;\r\n    ctx.lineWidth = HEXAGON_LINE_WIDTH;\r\n    ctx.stroke();\r\n    return hexPoints;\r\n};\r\n\r\n// Draws the background (clipped)\r\nconst drawBackground = (ctx, width, height, backgroundImage, hexPoints) => {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    hexPoints.forEach((point, i) => {\r\n        if (i === 0) ctx.moveTo(point.x, point.y);\r\n        else ctx.lineTo(point.x, point.y);\r\n    });\r\n    ctx.closePath();\r\n    ctx.clip();\r\n    if (backgroundImage && backgroundImage.complete && backgroundImage.naturalHeight !== 0) {\r\n        try {\r\n            const imgRatio = backgroundImage.naturalWidth / backgroundImage.naturalHeight;\r\n            const canvasRatio = width / height;\r\n            let drawWidth, drawHeight, drawX, drawY;\r\n            if (imgRatio > canvasRatio) {\r\n                drawHeight = height; drawWidth = imgRatio * drawHeight;\r\n                drawX = (width - drawWidth) / 2; drawY = 0;\r\n            } else {\r\n                drawWidth = width; drawHeight = drawWidth / imgRatio;\r\n                drawX = 0; drawY = (height - drawHeight) / 2;\r\n            }\r\n            ctx.drawImage(backgroundImage, drawX, drawY, drawWidth, drawHeight);\r\n        } catch (e) { ctx.fillStyle = '#BCBCBC'; ctx.fillRect(0, 0, width, height); }\r\n    } else { ctx.fillStyle = '#BCBCBC'; ctx.fillRect(0, 0, width, height); }\r\n    ctx.restore();\r\n};\r\n\r\n// Draws the concentric rings and diagonal guides\r\nconst drawGuides = (ctx, width, height, hexSize, centerX, centerY) => {\r\n    const ringRadii = [hexSize * 0.3, hexSize * 0.6, hexSize * 0.85];\r\n    ctx.strokeStyle = GUIDE_LINE_COLOR;\r\n    ctx.lineWidth = GUIDE_LINE_WIDTH;\r\n    // Rings\r\n    ringRadii.forEach(radius => {\r\n        ctx.beginPath(); ctx.arc(centerX, centerY, radius, 0, Math.PI * 2); ctx.stroke();\r\n    });\r\n    // Diagonals - use standard angles: 0, 60, 120 degrees\r\n    const diagonalAngles = [0, Math.PI / 3, 2 * Math.PI / 3];\r\n    diagonalAngles.forEach(angle => {\r\n        const startX = centerX + hexSize * Math.cos(angle); const startY = centerY + hexSize * Math.sin(angle);\r\n        const endX = centerX - hexSize * Math.cos(angle); const endY = centerY - hexSize * Math.sin(angle);\r\n        ctx.beginPath(); ctx.moveTo(startX, startY); ctx.lineTo(endX, endY); ctx.stroke();\r\n    });\r\n    // Center point\r\n    ctx.beginPath(); ctx.arc(centerX, centerY, 3, 0, Math.PI * 2);\r\n    ctx.fillStyle = GUIDE_LINE_COLOR; ctx.fill();\r\n    return ringRadii; // Return adjusted radii\r\n};\r\n\r\n// Fallback shape if image fails\r\nconst drawFallbackPew = (ctx) => {\r\n    ctx.beginPath(); ctx.arc(0, 0, 3, 0, Math.PI * 2);\r\n    ctx.fillStyle = 'red'; ctx.fill();\r\n};\r\n\r\n// Draw pews based on matrix\r\nconst drawPews = (ctx, matrix, pewImgObject, width, height, hexSize, centerX, centerY, ringRadii) => {\r\n    if (!matrix) return;\r\n    const imageToDraw = (pewImgObject && pewImgObject.complete && pewImgObject.naturalHeight !== 0) ? pewImgObject : null;\r\n\r\n    // Define the base angles for diagonals\r\n    const diagonalBaseAngles = [0, Math.PI / 3, 2 * Math.PI / 3];\r\n\r\n    // Convert matrix to pew placement\r\n    const pewPositions = [];\r\n    for (let r = 0; r < 3; r++) {\r\n        for (let d = 0; d < 3; d++) {\r\n            if (matrix[r][d] === 2) {\r\n                // Add symmetric pair\r\n                pewPositions.push([r, d, 0]);\r\n                pewPositions.push([r, d, 1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    pewPositions.forEach(pew => {\r\n        const [ringIndex, diagonalIndex, side] = pew;\r\n        \r\n        // 1. Get Base Angle for the diagonal\r\n        const baseAngle = diagonalBaseAngles[diagonalIndex];\r\n\r\n        // 2. Determine Specific Pew Angle based on 'side'\r\n        const pewAngle = baseAngle + (side === 0 ? 0 : Math.PI);\r\n\r\n        // 3. Get Radius for the ring\r\n        const radius = ringRadii[ringIndex];\r\n\r\n        // 4. Calculate Coordinates\r\n        const x = centerX + radius * Math.cos(pewAngle);\r\n        const y = centerY + radius * Math.sin(pewAngle);\r\n\r\n        // 5. Translate origin to the pew's location\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n\r\n        // 6. Calculate Orientation Angle (perpendicular to the diagonal)\r\n        const orientationAngle = pewAngle + Math.PI / 2;\r\n\r\n        // 7. Rotate context\r\n        ctx.rotate(orientationAngle);\r\n\r\n        // 8. Draw Image (or fallback)\r\n        if (imageToDraw) {\r\n            try {\r\n                const imgAspect = imageToDraw.naturalWidth / imageToDraw.naturalHeight;\r\n                let dWidth = PEW_DISPLAY_WIDTH;\r\n                let dHeight = dWidth / imgAspect;\r\n                if (dHeight > PEW_DISPLAY_HEIGHT) {\r\n                    dHeight = PEW_DISPLAY_HEIGHT;\r\n                    dWidth = dHeight * imgAspect;\r\n                }\r\n                // Align top/narrow edge midpoint with origin\r\n                const dx = -dWidth / 2;\r\n                const dy = 0;\r\n                ctx.drawImage(imageToDraw, dx, dy, dWidth, dHeight);\r\n            } catch (e) { drawFallbackPew(ctx); }\r\n        } else { drawFallbackPew(ctx); }\r\n\r\n        // 9. Restore context\r\n        ctx.restore();\r\n    });\r\n};\r\n\r\n// Interpolate between matrices for smooth animation\r\nconst interpolateMatrix = (startMatrix, endMatrix, progress) => {\r\n    // Create an interpolated matrix where 0 = not present, 1 = fading in/out, 2 = fully present\r\n    const result = [\r\n        [0, 0, 0],\r\n        [0, 0, 0],\r\n        [0, 0, 0]\r\n    ];\r\n    \r\n    for (let r = 0; r < 3; r++) {\r\n        for (let d = 0; d < 3; d++) {\r\n            // If both have pews, keep it at 2\r\n            if (startMatrix[r][d] === 2 && endMatrix[r][d] === 2) {\r\n                result[r][d] = 2;\r\n            }\r\n            // If start has pew but end doesn't, fade out\r\n            else if (startMatrix[r][d] === 2 && endMatrix[r][d] === 0) {\r\n                result[r][d] = progress < 0.5 ? 2 : 0;\r\n            }\r\n            // If end has pew but start doesn't, fade in\r\n            else if (startMatrix[r][d] === 0 && endMatrix[r][d] === 2) {\r\n                result[r][d] = progress > 0.5 ? 2 : 0;\r\n            }\r\n        }\r\n    }\r\n    \r\n    return result;\r\n};\r\n\r\n// --- Main Component ---\r\nconst HexagonalChurch = forwardRef(({ matrix, animationSteps, customImages }, ref) => {\r\n    // State\r\n    const [bgImg, setBgImg] = useState(null);\r\n    const [pewImg, setPewImg] = useState(null);\r\n    const [currentStepIndex, setCurrentStepIndex] = useState(0);\r\n    const [animationProgress, setAnimationProgress] = useState(1); // 0 to 1\r\n    const [animationActive, setAnimationActive] = useState(false);\r\n    const [interpolatedMatrix, setInterpolatedMatrix] = useState(matrix);\r\n    const animationRef = useRef(null);\r\n\r\n    // Image Loading\r\n    useEffect(() => {\r\n        const img = new Image();\r\n        img.onload = () => { setBgImg(img); };\r\n        img.onerror = (e) => { console.error(\"BG Image Load Error:\", e); setBgImg(null); };\r\n        img.src = customImages?.hexagonBackground || defaultChurchBackground;\r\n        \r\n        return () => { img.onload = null; img.onerror = null; };\r\n    }, [customImages?.hexagonBackground]);\r\n    \r\n    useEffect(() => {\r\n        const img = new Image();\r\n        img.onload = () => { setPewImg(img); };\r\n        img.onerror = (e) => { console.error(\"Pew Image Load Error:\", e); setPewImg(null); };\r\n        img.src = customImages?.buttonIcon || defaultPewImage;\r\n        \r\n        return () => { img.onload = null; img.onerror = null; };\r\n    }, [customImages?.buttonIcon]);\r\n\r\n    // Animation processing\r\n    useEffect(() => {\r\n        // If we have new animation steps, start animation\r\n        if (animationSteps && animationSteps.length > 1) {\r\n            setCurrentStepIndex(0);\r\n            setAnimationProgress(0);\r\n            setAnimationActive(true);\r\n        }\r\n    }, [animationSteps]);\r\n\r\n    // Animation frame handler\r\n    useEffect(() => {\r\n        if (!animationActive || !animationSteps || animationSteps.length <= 1) return;\r\n        \r\n        let startTime;\r\n        const step = (timestamp) => {\r\n            if (!startTime) startTime = timestamp;\r\n            const elapsed = timestamp - startTime;\r\n            const progress = Math.min(elapsed / ANIMATION_DURATION, 1);\r\n            \r\n            setAnimationProgress(progress);\r\n            \r\n            if (progress < 1) {\r\n                animationRef.current = requestAnimationFrame(step);\r\n            } else {\r\n                // Move to next step or finish animation\r\n                if (currentStepIndex < animationSteps.length - 1) {\r\n                    setCurrentStepIndex(prev => prev + 1);\r\n                    setAnimationProgress(0);\r\n                    startTime = null;\r\n                    animationRef.current = requestAnimationFrame(step);\r\n                } else {\r\n                    setAnimationActive(false);\r\n                }\r\n            }\r\n        };\r\n        \r\n        animationRef.current = requestAnimationFrame(step);\r\n        \r\n        return () => {\r\n            if (animationRef.current) {\r\n                cancelAnimationFrame(animationRef.current);\r\n            }\r\n        };\r\n    }, [animationActive, currentStepIndex, animationSteps]);\r\n\r\n    // Update interpolated matrix during animation\r\n    useEffect(() => {\r\n        if (!animationActive || !animationSteps || animationSteps.length <= 1) {\r\n            setInterpolatedMatrix(matrix);\r\n            return;\r\n        }\r\n        \r\n        const currentStep = animationSteps[currentStepIndex];\r\n        const nextStep = animationSteps[Math.min(currentStepIndex + 1, animationSteps.length - 1)];\r\n        \r\n        if (currentStep && nextStep) {\r\n            setInterpolatedMatrix(interpolateMatrix(\r\n                currentStep.matrix, \r\n                nextStep.matrix, \r\n                animationProgress\r\n            ));\r\n        }\r\n    }, [animationActive, currentStepIndex, animationProgress, animationSteps, matrix]);\r\n\r\n    // Drawing function\r\nconst drawCanvas = useCallback(() => {\r\n    const canvas = ref?.current;\r\n    if (!canvas) return;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n    \r\n    const { width, height } = canvas;\r\n    const centerX = width / 2;\r\n    const centerY = height / 2;\r\n    const hexSize = Math.min(width, height) * 0.45;\r\n\r\n    // Clear with transparent background instead of black\r\n    ctx.clearRect(0, 0, width, height);\r\n    \r\n    // Draw everything\r\n    const hexPoints = drawHexagonalOutline(ctx, width, height, hexSize, centerX, centerY);\r\n    drawBackground(ctx, width, height, bgImg, hexPoints);\r\n    drawHexagonalOutline(ctx, width, height, hexSize, centerX, centerY); // Outline on top\r\n    const ringRadii = drawGuides(ctx, width, height, hexSize, centerX, centerY);\r\n    \r\n    // Draw pews with current matrix or animation interpolation\r\n    const matrixToRender = animationActive ? interpolatedMatrix : matrix;\r\n    drawPews(ctx, matrixToRender, pewImg, width, height, hexSize, centerX, centerY, ringRadii);\r\n}, [ref, matrix, bgImg, pewImg, animationActive, interpolatedMatrix]);\r\n\r\n    // Effect to trigger drawing\r\n    useEffect(() => {\r\n        drawCanvas();\r\n    }, [drawCanvas]);\r\n\r\n    // Render\r\n    return (\r\n        <div className=\"church-visualization\">\r\n            <canvas\r\n                ref={ref}\r\n                width={600}\r\n                height={600}\r\n                className=\"church-canvas\"\r\n                aria-label=\"Hexagonal church layout\"\r\n                role=\"img\"\r\n            />\r\n            {animationActive && (\r\n                <div className=\"animation-status\">\r\n                    <div className=\"step-description\">\r\n                        {animationSteps[currentStepIndex]?.description || \"Transformation in progress...\"}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nHexagonalChurch.displayName = 'HexagonalChurch';\r\nexport default HexagonalChurch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}