{"ast":null,"code":"import{useRef,useEffect,useState,forwardRef}from'react';// Update image paths to use assets directory\nimport defaultPewImage from'../assets/pew-icon.png';import defaultChurchBackground from'../assets/church-background.png';import{jsx as _jsx}from\"react/jsx-runtime\";const HexagonalChurch=/*#__PURE__*/forwardRef((_ref,ref)=>{let{arrangement,vector,customPewImage,customBgImage}=_ref;const canvasRef=useRef(null);const[pewImg,setPewImg]=useState(null);const[bgImg,setBgImg]=useState(null);const[isRendering,setIsRendering]=useState(false);// Load the default pew image if no custom image is provided\nuseEffect(()=>{if(customPewImage){setPewImg(customPewImage);}else{const img=new Image();img.src=defaultPewImage;img.onload=()=>{setPewImg(img);};img.onerror=e=>{console.error(\"Failed to load default pew image:\",e);};}},[customPewImage]);// Load the default background image if no custom image is provided\nuseEffect(()=>{if(customBgImage){setBgImg(customBgImage);}else{const img=new Image();img.src=defaultChurchBackground;img.onload=()=>{setBgImg(img);};img.onerror=e=>{console.error(\"Failed to load default background image:\",e);};}},[customBgImage]);// Render the canvas whenever the arrangement or images change\nuseEffect(()=>{if(!canvasRef.current||!arrangement)return;if(isRendering)return;// Prevent re-entrancy\nsetIsRendering(true);const canvas=canvasRef.current;const ctx=canvas.getContext('2d');// Clear the canvas\nctx.clearRect(0,0,canvas.width,canvas.height);// Draw the church\ndrawHexagonalChurch(ctx,canvas.width,canvas.height,bgImg);// Draw the pews based on the arrangement\ndrawPews(ctx,arrangement,canvas.width,canvas.height,pewImg);// Draw legend\ndrawLegend(ctx,vector,canvas.width,canvas.height);setIsRendering(false);},[arrangement,vector,pewImg,bgImg,canvasRef]);return/*#__PURE__*/_jsx(\"div\",{className:\"church-visualization\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:600,height:600,className:\"church-canvas\"})});});// Helper functions to draw the church and pews\nconst drawHexagonalChurch=(ctx,width,height,backgroundImage)=>{const centerX=width/2;const centerY=height/2;// Calculate hexagon vertices\nconst hexSize=Math.min(width,height)*0.45;const hexPoints=[];for(let i=0;i<6;i++){const angle=Math.PI/3*i;// 30 degree rotation is built in\nconst x=centerX+hexSize*Math.cos(angle);const y=centerY+hexSize*Math.sin(angle);hexPoints.push({x,y});}// Draw hexagonal outline\nctx.beginPath();hexPoints.forEach((point,i)=>{if(i===0){ctx.moveTo(point.x,point.y);}else{ctx.lineTo(point.x,point.y);}});ctx.closePath();// Fill with background image or default color\nif(backgroundImage){try{// Create a clipping path for the hexagon\nctx.save();ctx.clip();// Calculate how to fit the image within the hexagon\nconst imageAspect=backgroundImage.width/backgroundImage.height;const hexAspect=width/height;let drawWidth,drawHeight,drawX,drawY;if(imageAspect>hexAspect){// Image is wider than hexagon\ndrawHeight=height;drawWidth=drawHeight*imageAspect;drawX=centerX-drawWidth/2;drawY=0;}else{// Image is taller than hexagon\ndrawWidth=width;drawHeight=drawWidth/imageAspect;drawX=0;drawY=centerY-drawHeight/2;}// Draw the background image\nctx.drawImage(backgroundImage,drawX,drawY,drawWidth,drawHeight);ctx.restore();}catch(e){console.error(\"Error drawing background image:\",e);ctx.fillStyle='#e0d8c0';// Fallback color\nctx.fill();}}else{// Use default color\nctx.fillStyle='#e0d8c0';ctx.fill();}// Draw the hexagon outline\nctx.strokeStyle='#444';ctx.lineWidth=5;ctx.stroke();// Draw concentric rings\nconst ringRadii=[hexSize*0.25,hexSize*0.6,hexSize*0.85];ringRadii.forEach(radius=>{ctx.beginPath();ctx.arc(centerX,centerY,radius,0,Math.PI*2);ctx.strokeStyle='#444';ctx.lineWidth=2;ctx.stroke();});// Draw angle bisectors\nfor(let i=0;i<3;i++){// Each angle bisector connects opposite vertices\nconst angle=Math.PI/3*i;// 0, 60, 120 degrees\nctx.beginPath();ctx.moveTo(centerX-hexSize*Math.cos(angle),centerY-hexSize*Math.sin(angle));ctx.lineTo(centerX+hexSize*Math.cos(angle),centerY+hexSize*Math.sin(angle));ctx.strokeStyle='#444';ctx.lineWidth=2;ctx.stroke();}// Draw center point\nctx.beginPath();ctx.arc(centerX,centerY,4,0,Math.PI*2);ctx.fillStyle='#444';ctx.fill();};const drawPews=(ctx,arrangement,width,height,pewImage)=>{const centerX=width/2;const centerY=height/2;const hexSize=Math.min(width,height)*0.45;const ringRadii=[hexSize*0.25,hexSize*0.6,hexSize*0.85];const pewWidth=25;const pewHeight=15;// Loop through the arrangement and draw each pew\narrangement.forEach(pew=>{const[ringIndex,diagonalIndex,side]=pew;const radius=ringRadii[ringIndex];// Adjust angle calculation for rotated hexagon\nconst angle=Math.PI/3*diagonalIndex+(side===0?Math.PI:0);const x=centerX+radius*Math.cos(angle);const y=centerY+radius*Math.sin(angle);ctx.save();ctx.translate(x,y);ctx.rotate(angle+Math.PI/2);if(pewImage){try{// Draw the custom pew image\nconst imgWidth=pewWidth*4.2;// Make slightly larger than default pew\nconst imgHeight=pewHeight*4.2;ctx.drawImage(pewImage,-imgWidth/2,-imgHeight/2,imgWidth,imgHeight);}catch(e){console.error(\"Error drawing pew image:\",e);// Fallback to default pew\nctx.fillStyle='#8B4513';ctx.fillRect(-pewWidth/2,-pewHeight/2,pewWidth,pewHeight);ctx.strokeStyle='#000';ctx.lineWidth=1;ctx.strokeRect(-pewWidth/2,-pewHeight/2,pewWidth,pewHeight);}}else{// Draw default pew\nctx.fillStyle='#8B4513';ctx.fillRect(-pewWidth/2,-pewHeight/2,pewWidth,pewHeight);ctx.strokeStyle='#000';ctx.lineWidth=1;ctx.strokeRect(-pewWidth/2,-pewHeight/2,pewWidth,pewHeight);}ctx.restore();});};const drawLegend=(ctx,vector,width,height)=>{const[r1,r2,r3,d1,d2,d3]=vector;ctx.font='14px Arial';ctx.fillStyle='#000';ctx.fillText(`Vector: (${vector.join(', ')})`,20,height-60);ctx.fillText(`${r1} pews on innermost ring, ${r2} on middle, ${r3} on outermost`,20,height-40);ctx.fillText(`${d1} pews on horizontal, ${d2} on diagonal ↗↙, ${d3} on diagonal ↖↘`,20,height-20);};HexagonalChurch.displayName='HexagonalChurch';export default HexagonalChurch;","map":{"version":3,"names":["useRef","useEffect","useState","forwardRef","defaultPewImage","defaultChurchBackground","jsx","_jsx","HexagonalChurch","_ref","ref","arrangement","vector","customPewImage","customBgImage","canvasRef","pewImg","setPewImg","bgImg","setBgImg","isRendering","setIsRendering","img","Image","src","onload","onerror","e","console","error","current","canvas","ctx","getContext","clearRect","width","height","drawHexagonalChurch","drawPews","drawLegend","className","children","backgroundImage","centerX","centerY","hexSize","Math","min","hexPoints","i","angle","PI","x","cos","y","sin","push","beginPath","forEach","point","moveTo","lineTo","closePath","save","clip","imageAspect","hexAspect","drawWidth","drawHeight","drawX","drawY","drawImage","restore","fillStyle","fill","strokeStyle","lineWidth","stroke","ringRadii","radius","arc","pewImage","pewWidth","pewHeight","pew","ringIndex","diagonalIndex","side","translate","rotate","imgWidth","imgHeight","fillRect","strokeRect","r1","r2","r3","d1","d2","d3","font","fillText","join","displayName"],"sources":["C:/ApplicationDev/pope-punk.github.io/hexagonal-church-app/src/components/HexagonalChurch.jsx"],"sourcesContent":["import { useRef, useEffect, useState, forwardRef } from 'react';\r\n// Update image paths to use assets directory\r\nimport defaultPewImage from '../assets/pew-icon.png';\r\nimport defaultChurchBackground from '../assets/church-background.png';\r\n\r\nconst HexagonalChurch = forwardRef(({ arrangement, vector, customPewImage, customBgImage }, ref) => {\r\n  const canvasRef = useRef(null);\r\n  const [pewImg, setPewImg] = useState(null);\r\n  const [bgImg, setBgImg] = useState(null);\r\n  const [isRendering, setIsRendering] = useState(false);\r\n  \r\n  // Load the default pew image if no custom image is provided\r\n  useEffect(() => {\r\n    if (customPewImage) {\r\n      setPewImg(customPewImage);\r\n    } else {\r\n      const img = new Image();\r\n      img.src = defaultPewImage;\r\n      img.onload = () => {\r\n        setPewImg(img);\r\n      };\r\n      img.onerror = (e) => {\r\n        console.error(\"Failed to load default pew image:\", e);\r\n      };\r\n    }\r\n  }, [customPewImage]);\r\n  \r\n  // Load the default background image if no custom image is provided\r\n  useEffect(() => {\r\n    if (customBgImage) {\r\n      setBgImg(customBgImage);\r\n    } else {\r\n      const img = new Image();\r\n      img.src = defaultChurchBackground;\r\n      img.onload = () => {\r\n        setBgImg(img);\r\n      };\r\n      img.onerror = (e) => {\r\n        console.error(\"Failed to load default background image:\", e);\r\n      };\r\n    }\r\n  }, [customBgImage]);\r\n  \r\n  // Render the canvas whenever the arrangement or images change\r\n  useEffect(() => {\r\n    if (!canvasRef.current || !arrangement) return;\r\n    if (isRendering) return; // Prevent re-entrancy\r\n    \r\n    setIsRendering(true);\r\n    \r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    // Clear the canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    \r\n    // Draw the church\r\n    drawHexagonalChurch(ctx, canvas.width, canvas.height, bgImg);\r\n    \r\n    // Draw the pews based on the arrangement\r\n    drawPews(ctx, arrangement, canvas.width, canvas.height, pewImg);\r\n    \r\n    // Draw legend\r\n    drawLegend(ctx, vector, canvas.width, canvas.height);\r\n    \r\n    setIsRendering(false);\r\n  }, [arrangement, vector, pewImg, bgImg, canvasRef]);\r\n  \r\n  return (\r\n    <div className=\"church-visualization\">\r\n      <canvas \r\n        ref={canvasRef} \r\n        width={600} \r\n        height={600} \r\n        className=\"church-canvas\"\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\n// Helper functions to draw the church and pews\r\nconst drawHexagonalChurch = (ctx, width, height, backgroundImage) => {\r\n  const centerX = width / 2;\r\n  const centerY = height / 2;\r\n  \r\n  // Calculate hexagon vertices\r\n  const hexSize = Math.min(width, height) * 0.45;\r\n  const hexPoints = [];\r\n  \r\n  for (let i = 0; i < 6; i++) {\r\n    const angle = (Math.PI / 3) * i; // 30 degree rotation is built in\r\n    const x = centerX + hexSize * Math.cos(angle);\r\n    const y = centerY + hexSize * Math.sin(angle);\r\n    hexPoints.push({ x, y });\r\n  }\r\n  \r\n  // Draw hexagonal outline\r\n  ctx.beginPath();\r\n  hexPoints.forEach((point, i) => {\r\n    if (i === 0) {\r\n      ctx.moveTo(point.x, point.y);\r\n    } else {\r\n      ctx.lineTo(point.x, point.y);\r\n    }\r\n  });\r\n  ctx.closePath();\r\n  \r\n  // Fill with background image or default color\r\n  if (backgroundImage) {\r\n    try {\r\n      // Create a clipping path for the hexagon\r\n      ctx.save();\r\n      ctx.clip();\r\n      \r\n      // Calculate how to fit the image within the hexagon\r\n      const imageAspect = backgroundImage.width / backgroundImage.height;\r\n      const hexAspect = width / height;\r\n      \r\n      let drawWidth, drawHeight, drawX, drawY;\r\n      \r\n      if (imageAspect > hexAspect) {\r\n        // Image is wider than hexagon\r\n        drawHeight = height;\r\n        drawWidth = drawHeight * imageAspect;\r\n        drawX = centerX - drawWidth / 2;\r\n        drawY = 0;\r\n      } else {\r\n        // Image is taller than hexagon\r\n        drawWidth = width;\r\n        drawHeight = drawWidth / imageAspect;\r\n        drawX = 0;\r\n        drawY = centerY - drawHeight / 2;\r\n      }\r\n      \r\n      // Draw the background image\r\n      ctx.drawImage(backgroundImage, drawX, drawY, drawWidth, drawHeight);\r\n      ctx.restore();\r\n    } catch (e) {\r\n      console.error(\"Error drawing background image:\", e);\r\n      ctx.fillStyle = '#e0d8c0'; // Fallback color\r\n      ctx.fill();\r\n    }\r\n  } else {\r\n    // Use default color\r\n    ctx.fillStyle = '#e0d8c0';\r\n    ctx.fill();\r\n  }\r\n  \r\n  // Draw the hexagon outline\r\n  ctx.strokeStyle = '#444';\r\n  ctx.lineWidth = 5;\r\n  ctx.stroke();\r\n  \r\n  // Draw concentric rings\r\n  const ringRadii = [hexSize * 0.25, hexSize * 0.6, hexSize * 0.85];\r\n  ringRadii.forEach(radius => {\r\n    ctx.beginPath();\r\n    ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\r\n    ctx.strokeStyle = '#444';\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n  });\r\n  \r\n  // Draw angle bisectors\r\n  for (let i = 0; i < 3; i++) {\r\n    // Each angle bisector connects opposite vertices\r\n    const angle = (Math.PI / 3) * i; // 0, 60, 120 degrees\r\n    ctx.beginPath();\r\n    ctx.moveTo(centerX - hexSize * Math.cos(angle), centerY - hexSize * Math.sin(angle));\r\n    ctx.lineTo(centerX + hexSize * Math.cos(angle), centerY + hexSize * Math.sin(angle));\r\n    ctx.strokeStyle = '#444';\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n  }\r\n  \r\n  // Draw center point\r\n  ctx.beginPath();\r\n  ctx.arc(centerX, centerY, 4, 0, Math.PI * 2);\r\n  ctx.fillStyle = '#444';\r\n  ctx.fill();\r\n};\r\n\r\nconst drawPews = (ctx, arrangement, width, height, pewImage) => {\r\n  const centerX = width / 2;\r\n  const centerY = height / 2;\r\n  const hexSize = Math.min(width, height) * 0.45;\r\n  const ringRadii = [hexSize * 0.25, hexSize * 0.6, hexSize * 0.85];\r\n  const pewWidth = 25;\r\n  const pewHeight = 15;\r\n  \r\n  // Loop through the arrangement and draw each pew\r\n  arrangement.forEach(pew => {\r\n    const [ringIndex, diagonalIndex, side] = pew;\r\n    const radius = ringRadii[ringIndex];\r\n    // Adjust angle calculation for rotated hexagon\r\n    const angle = (Math.PI / 3) * diagonalIndex + (side === 0 ? Math.PI : 0);\r\n    \r\n    const x = centerX + radius * Math.cos(angle);\r\n    const y = centerY + radius * Math.sin(angle);\r\n    \r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n    ctx.rotate(angle + Math.PI / 2);\r\n    \r\n    if (pewImage) {\r\n      try {\r\n        // Draw the custom pew image\r\n        const imgWidth = pewWidth * 4.2; // Make slightly larger than default pew\r\n        const imgHeight = pewHeight * 4.2;\r\n        ctx.drawImage(pewImage, -imgWidth / 2, -imgHeight / 2, imgWidth, imgHeight);\r\n      } catch (e) {\r\n        console.error(\"Error drawing pew image:\", e);\r\n        // Fallback to default pew\r\n        ctx.fillStyle = '#8B4513';\r\n        ctx.fillRect(-pewWidth / 2, -pewHeight / 2, pewWidth, pewHeight);\r\n        ctx.strokeStyle = '#000';\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeRect(-pewWidth / 2, -pewHeight / 2, pewWidth, pewHeight);\r\n      }\r\n    } else {\r\n      // Draw default pew\r\n      ctx.fillStyle = '#8B4513';\r\n      ctx.fillRect(-pewWidth / 2, -pewHeight / 2, pewWidth, pewHeight);\r\n      ctx.strokeStyle = '#000';\r\n      ctx.lineWidth = 1;\r\n      ctx.strokeRect(-pewWidth / 2, -pewHeight / 2, pewWidth, pewHeight);\r\n    }\r\n    \r\n    ctx.restore();\r\n  });\r\n};\r\n\r\nconst drawLegend = (ctx, vector, width, height) => {\r\n  const [r1, r2, r3, d1, d2, d3] = vector;\r\n  ctx.font = '14px Arial';\r\n  ctx.fillStyle = '#000';\r\n  ctx.fillText(`Vector: (${vector.join(', ')})`, 20, height - 60);\r\n  ctx.fillText(`${r1} pews on innermost ring, ${r2} on middle, ${r3} on outermost`, 20, height - 40);\r\n  ctx.fillText(`${d1} pews on horizontal, ${d2} on diagonal ↗↙, ${d3} on diagonal ↖↘`, 20, height - 20);\r\n};\r\n\r\nHexagonalChurch.displayName = 'HexagonalChurch';\r\n\r\nexport default HexagonalChurch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}